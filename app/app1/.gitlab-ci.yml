---
stages:
  - build
  - deploy
##########################################
build_image:
  stage: build
  image: docker:git
  services:
    - docker:dind
  script:
    - lastver=$(date +"%m.%d")
    - apk add --no-cache python3 py-pip
    - pip install docker-squash "docker<3.0.0"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd ./image
    - docker build -t $CI_REGISTRY_IMAGE --build-arg githash=$CI_COMMIT_SHORT_SHA .
    - docker-squash -t $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE
    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:$lastver
    - docker push $CI_REGISTRY_IMAGE
##########################################
.deploy:
  stage: deploy
  image: reg.gitlab.chewysb.com/devops/docker/apps/tfany
  variables:
    IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  rules:
    - if: '$IMAGE =~ /^$/'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH != "dev"'
      when: manual
  script:
    - cp ${tfcloud} ~/.terraformrc
    - vertical=$(echo $CI_PROJECT_NAMESPACE | rev | cut -d/ -f1 | rev)
    - export TF_WORKSPACE=_${CI_COMMIT_BRANCH}_${CI_JOB_NAME}
    - export TF_VAR_image=${IMAGE}
    - env
    - terraform init
    - terraform plan
    - terraform apply --auto-approve
  environment:
    name: ${CI_COMMIT_BRANCH}_${CI_JOB_NAME}
    url: https://${CI_PROJECT_TITLE}.${CI_COMMIT_BRANCH}${vertical}eks00${CI_JOB_NAME}.chewysb.com
##########################################

east:
  extends: .deploy
west:
  extends: .deploy

